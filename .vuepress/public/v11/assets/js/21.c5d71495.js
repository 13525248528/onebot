(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{376:function(e,_,v){"use strict";v.r(_);var t=v(25),o=Object(t.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"升级指南"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#升级指南"}},[e._v("#")]),e._v(" 升级指南")]),e._v(" "),v("p",[e._v("由于 4.x 版本相比 3.x 引入了一些破坏性更改，因此这里给出一份升级指南，帮助用户从旧版升级到 4.x。")]),e._v(" "),v("h2",{attrs:{id:"事件上报的数据字段变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件上报的数据字段变更"}},[e._v("#")]),e._v(" 事件上报的数据字段变更")]),e._v(" "),v("p",[e._v("这个变化破坏性比较大，如果不更改配置或代码，可能使当前可用的程序变得不可用。首先列出变更如下：")]),e._v(" "),v("ul",[v("li",[e._v("群组消息中匿名信息现在以对象形式表示，例如 "),v("code",[e._v('"anonymous": {"id": 1000019, "name": "邓八公", "flag": "AAAAAAAPQlMABrXLsMu5qwAokaXsWulfxg2hPMTHguk1acbiU1NyW2BfxEnEMR5SNYFSns6SKKVe5A=="}')]),e._v("，非匿名消息中此字段为 "),v("code",[e._v("null")])]),e._v(" "),v("li",[e._v("通知类上报中（群成员增加、群管理员变更等），"),v("code",[e._v("post_type")]),e._v(" 字段值从 "),v("code",[e._v("event")]),e._v(" 变为 "),v("code",[e._v("notice")]),e._v("，原先的 "),v("code",[e._v("event")]),e._v(" 字段变为 "),v("code",[e._v("notice_type")]),e._v(" 字段")]),e._v(" "),v("li",[e._v("请求类上报的 "),v("code",[e._v("message")]),e._v(" 字段现变为 "),v("code",[e._v("comment")]),e._v(" 字段")])]),e._v(" "),v("p",[e._v("如果你是应用作者，可将使用到的发生了变化的地方字段的键值直接做相应修改，如果现有代码过于复杂不易修改，可开启 "),v("code",[e._v("enable_backward_compatibility")]),e._v(" 配置项来临时保持兼容；对于 SDK 作者，建议同时兼容 4.x 和 3.x 两种上报，且接口也分别和上报对应，例如同时提供 "),v("code",[e._v("event.NoticeType")]),e._v(" 和 "),v("code",[e._v("event.Event")]),e._v(" 来分别表示 4.x 的 "),v("code",[e._v("notice_type")]),e._v(" 和 3.x 的 "),v("code",[e._v("event")]),e._v(" 字段，并在文档或注释中做相应说明，如果无法同时兼容，建议将 SDK 的接口写为 4.x 版本的样式，然后再通过将 3.x 的上报转换为 4.x 的格式来兼容。")]),e._v(" "),v("h2",{attrs:{id:"事件过滤器的变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件过滤器的变更"}},[e._v("#")]),e._v(" 事件过滤器的变更")]),e._v(" "),v("p",[e._v("变更如下：")]),e._v(" "),v("ul",[v("li",[e._v("事件过滤器不再使用 "),v("code",[e._v("use_filter")]),e._v(" 配置项来开关，而是使用 "),v("code",[e._v("event_filter")]),e._v(" 直接指定过滤器规则文件的相对路径（相对于 "),v("code",[e._v("app\\io.github.richardchien.coolqhttpapi")]),e._v("），默认为空，即表示不启用事件过滤器")]),e._v(" "),v("li",[e._v("事件过滤器规则中，旧版中对消息原始文本进行过滤的 "),v("code",[e._v("message")]),e._v(" 字段现在改为处理过的数组格式的消息，未经处理的原始消息文本现在保存在 "),v("code",[e._v("raw_message")]),e._v(" 字段")])]),e._v(" "),v("p",[e._v("如果在 3.x 版本时使用了过滤器，升级到 4.x 版本时，需要将配置文件中的 "),v("code",[e._v("use_filter=true")]),e._v(" 改为 "),v("code",[e._v("event_filter=filter.json")]),e._v("，由于现在是直接指定过滤规则文件名，也意味着可以针对不同的 QQ 号应用不同的过滤规则。")]),e._v(" "),v("p",[e._v("除了配置项需要修改之外，如果过滤规则中对原来的 "),v("code",[e._v("message")]),e._v(" 字段写了规则，则需要改成 "),v("code",[e._v("raw_message")]),e._v("，然后将上一节中提到的上报数据中发生了变更的字段也做修改，比如 "),v("code",[e._v('{"post_type": "event"}')]),e._v(" 改为 "),v("code",[e._v('{"post_type": "notice"}')]),e._v("，需要注意的是，"),v("code",[e._v("enable_backward_compatibility")]),e._v(" 配置项"),v("strong",[e._v("不会")]),e._v("影响事件过滤器看到的数据。")]),e._v(" "),v("h2",{attrs:{id:"user-agent-变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#user-agent-变更"}},[e._v("#")]),e._v(" User-Agent 变更")]),e._v(" "),v("p",[e._v("插件发送请求时的 User-Agent 由形如 "),v("code",[e._v("CoolQHttpApi/3.4.0")]),e._v(" 改成了形如 "),v("code",[e._v("CQHttp/4.0.0")]),e._v("。")]),e._v(" "),v("h2",{attrs:{id:"get-status-接口返回数据的变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get-status-接口返回数据的变更"}},[e._v("#")]),e._v(" "),v("code",[e._v("/get_status")]),e._v(" 接口返回数据的变更")]),e._v(" "),v("p",[v("code",[e._v("/get_status")]),e._v(" 接口的返回数据有所变化，但 "),v("code",[e._v("good")]),e._v("、"),v("code",[e._v("online")]),e._v("、"),v("code",[e._v("app_enabled")]),e._v(" 字段仍然不变，具体请自行测试。如果你的应用需要检测 CKYU 和 CQHTTP 插件的运行状态，建议只使用上述三个字段来判断。")]),e._v(" "),v("h2",{attrs:{id:"docker-镜像的变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像的变更"}},[e._v("#")]),e._v(" Docker 镜像的变更")]),e._v(" "),v("p",[e._v("版本锁的文件名由原来的 "),v("code",[e._v("app.lock")]),e._v(" 改为 "),v("code",[e._v("version.lock")]),e._v("，如果你需要解除容器中插件版本的锁定（即每次启动容器时都使用镜像对应版本的插件 cpk 文件覆盖已有的 cpk），现在需要删除 "),v("code",[e._v("version.lock")]),e._v("。此外，这个文件不再影响配置文件。")]),e._v(" "),v("p",[e._v("现在容器启动时会检查是否存在 "),v("code",[e._v("config")]),e._v(" 目录，如果不存在，则会创建它，并从环境变量读取 "),v("code",[e._v("CQHTTP_")]),e._v(" 开头的项，写入配置文件；如果存在，则默认情况下不做任何改变，除非 "),v("code",[e._v("FORCE_ENV")]),e._v(" 环境变量为 "),v("code",[e._v("true")]),e._v("，则会完全删除现有的整个 "),v("code",[e._v("config")]),e._v(" 目录，并根据环境变量重新写入。")]),e._v(" "),v("h2",{attrs:{id:"运行时库的变更"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运行时库的变更"}},[e._v("#")]),e._v(" 运行时库的变更")]),e._v(" "),v("p",[e._v("由于新版使用了动态链接的 C 运行时，Windows 7 和 Windows Server 2008 等较老系统可能需要额外安装 "),v("a",{attrs:{href:"https://support.microsoft.com/zh-cn/help/3118401/update-for-universal-c-runtime-in-windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("通用 C 运行库更新"),v("OutboundLink")],1),e._v(" 才能正常使用，否则 CKYU 启动时会报 DLL 缺失错误。")])])}),[],!1,null,null,null);_.default=o.exports}}]);