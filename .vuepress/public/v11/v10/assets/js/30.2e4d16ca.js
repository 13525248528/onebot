(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{384:function(t,s,a){"use strict";a.r(s);var e=a(25),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),a("p",[t._v("CQHTTP 在启动时开启一个 HTTP 服务器，监听配置文件指定的 IP 和端口，接受路径为 "),a("code",[t._v("/:action")]),t._v(" 的 API 请求（或 "),a("code",[t._v("/:action/")]),t._v("），如 "),a("code",[t._v("/send_private_msg")]),t._v("，请求可以使用 GET 或 POST 方法，可以通过 query 参数（"),a("code",[t._v("?arg1=111&arg2=222")]),t._v("）、urlencoded 表单（"),a("code",[t._v("arg1=111&arg2=222")]),t._v("）或 JSON（"),a("code",[t._v('{"arg1": "111", "arg2": "222"}')]),t._v("）传递参数。")]),t._v(" "),a("p",[t._v("参数可能有不同的类型，当用户通过 query 参数或 urlencoded 表单传参，或在 JSON 中使用字符串作为参数值时，CQHTTP 实现需要从字符串解析出对应类型的数据。")]),t._v(" "),a("h2",{attrs:{id:"请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求"}},[t._v("#")]),t._v(" 请求")]),t._v(" "),a("p",[t._v("假设配置中指定了 IP 和端口分别为 "),a("code",[t._v("127.0.0.1")]),t._v(" 和 "),a("code",[t._v("5700")]),t._v("，则在浏览器中访问 "),a("code",[t._v("http://127.0.0.1:5700/send_private_msg?user_id=1000010000&message=hello")]),t._v(" 即可给 QQ 号为 "),a("code",[t._v("1000010000")]),t._v(" 的好友发送私聊消息 "),a("code",[t._v("hello")]),t._v("。")]),t._v(" "),a("p",[t._v("如需使用 JSON 传递参数，则请求如下：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("POST")]),t._v(" /send_private_msg HTTP/1.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host:")]),t._v(" 127.0.0.1:5700\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Type:")]),t._v(" application/json"),a("span",{pre:!0,attrs:{class:"token application-json"}},[t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000010000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("ul",[a("li",[t._v("当使用 query 参数或 urlencoded 表单传递参数时，参数值必须进行 urlencode。")]),t._v(" "),a("li",[t._v("当使用 urlencoded 表单或 JSON 传递参数时，请求头中的 "),a("code",[t._v("Content-Type")]),t._v(" 必须对应的为 "),a("code",[t._v("application/x-www-form-urlencoded")]),t._v(" 或 "),a("code",[t._v("application/json")]),t._v("。")])])]),t._v(" "),a("p",[t._v("上例中调用的 API（即 action）为 "),a("code",[t._v("send_private_msg")]),t._v("，其它 API 及它们的参数和响应内容，见 "),a("RouterLink",{attrs:{to:"/specs/api/"}},[t._v("API")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应"}},[t._v("#")]),t._v(" 响应")]),t._v(" "),a("p",[t._v("收到 API 请求并处理后，CQHTTP 会返回一个 HTTP 响应，根据具体情况不同，HTTP 状态码不同：")]),t._v(" "),a("ul",[a("li",[t._v("如果 access token 未提供，状态码为 401（关于 access token，见 "),a("RouterLink",{attrs:{to:"/specs/communication/authorization.html"}},[t._v("鉴权")]),t._v("）")],1),t._v(" "),a("li",[t._v("如果 access token 不符合，状态码为 403")]),t._v(" "),a("li",[t._v("如果 POST 请求的 Content-Type 不支持，状态码为 406")]),t._v(" "),a("li",[t._v("如果 POST 请求的正文格式不正确，状态码为 400")]),t._v(" "),a("li",[t._v("如果 API 不存在，状态码为 404")]),t._v(" "),a("li",[t._v("剩下的所有情况，无论操作实际成功与否，状态码都是 200")])]),t._v(" "),a("p",[t._v("状态码为 200 时，响应内容为 JSON 格式，基本结构如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"retcode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nickname"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"滑稽"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("status")]),t._v(" 字段表示请求的状态：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ok")]),t._v(" 表示操作成功，同时 "),a("code",[t._v("retcode")]),t._v(" （返回码）会等于 0")]),t._v(" "),a("li",[a("code",[t._v("async")]),t._v(" 表示请求已提交异步处理，此时 "),a("code",[t._v("retcode")]),t._v(" 为 1，具体成功或失败将无法获知")]),t._v(" "),a("li",[a("code",[t._v("failed")]),t._v(" 表示操作失败，此时 "),a("code",[t._v("retcode")]),t._v(" 既不是 0 也不是 1，具体错误信息应参考 CQHTTP 日志")])]),t._v(" "),a("p",[a("code",[t._v("data")]),t._v(" 字段为 API 返回数据的内容，对于踢人、禁言等不需要返回数据的操作，这里为 null，对于获取群成员信息这类操作，这里为所获取的数据的对象，具体的数据内容将会在相应的 API 描述中给出。注意，异步版本的 API，"),a("code",[t._v("data")]),t._v(" 永远是 null，即使其相应的同步接口本身是有数据。")]),t._v(" "),a("h2",{attrs:{id:"相关配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关配置"}},[t._v("#")]),t._v(" 相关配置")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("配置项名称仅供参考，不同 CQHTTP 实现可以自行定义名称，只需在样例配置中给出注释即可。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("配置项")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("http.enable")])]),t._v(" "),a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("是否启用 HTTP")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("http.host")])]),t._v(" "),a("td",[a("code",[t._v("0.0.0.0")])]),t._v(" "),a("td",[t._v("HTTP 服务器监听的 IP")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("http.port")])]),t._v(" "),a("td",[a("code",[t._v("5700")])]),t._v(" "),a("td",[t._v("HTTP 服务器监听的端口")])])])])])}),[],!1,null,null,null);s.default=_.exports}}]);