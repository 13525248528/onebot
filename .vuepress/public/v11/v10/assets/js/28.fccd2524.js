(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{383:function(t,e,s){"use strict";s.r(e);var a=s(25),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#鉴权"}},[t._v("#")]),t._v(" 鉴权")]),t._v(" "),s("p",[t._v("在 HTTP POST 通信方式中，CQHTTP 提供了 "),s("RouterLink",{attrs:{to:"/specs/communication/http-post.html#签名"}},[t._v("签名")]),t._v(" 来保证安全性，而在 HTTP、正向 WebSocket、反向 WebSocket 通信方式中，通过对 access token 进行验证来保证安全性。")],1),t._v(" "),s("h2",{attrs:{id:"http-和正向-websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-和正向-websocket"}},[t._v("#")]),t._v(" HTTP 和正向 WebSocket")]),t._v(" "),s("p",[t._v("如果配置文件中填写了 access token，则每次客户端向 CQHTTP 发送请求时需要在请求头中加入 "),s("code",[t._v("Authorization")]),t._v(" 头，如：")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token request-line"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("GET")]),t._v(" /get_friend_list HTTP/1.1")]),t._v("\n...\n"),s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" Bearer kSLuTF2GC2Q4q4ugm3\n")])])]),s("p",[s("code",[t._v("Bearer")]),t._v(" 后面需给出和 CQHTTP 配置中相同的 access token。")]),t._v(" "),s("p",[t._v("在某些特殊情况下，可能无法修改请求头，则可以通过 query 参数传入 access token，例如：")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token request-line"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("GET")]),t._v(" /get_friend_list?access_token=kSLuTF2GC2Q4q4ugm3 HTTP/1.1")]),t._v("\n")])])]),s("h2",{attrs:{id:"反向-websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向-websocket"}},[t._v("#")]),t._v(" 反向 WebSocket")]),t._v(" "),s("p",[t._v("如果配置文件中填写了 access token，则每次 CQHTTP 的反向 WebSocket 客户端在向用户配置的 URL 建立连接的时候，会在请求头中加入 "),s("code",[t._v("Authorization")]),t._v(" 头，如：")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token request-line"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("GET")]),t._v(" /ws/api HTTP/1.1")]),t._v("\n...\n"),s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Authorization:")]),t._v(" Token kSLuTF2GC2Q4q4ugm3\n")])])]),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("重要")]),t._v(" "),s("p",[t._v("这里本应该是 "),s("code",[t._v("Authorization: Bearer kSLuTF2GC2Q4q4ugm3")]),t._v("（和 "),s("a",{attrs:{href:"#http-%E5%92%8C%E6%AD%A3%E5%90%91-websocket"}},[t._v("HTTP 和正向 WebSocket")]),t._v(" 一致），但由于原 CQHTTP 插件历史上的某次升级时忘记把这里的 "),s("code",[t._v("Token")]),t._v(" 改为 "),s("code",[t._v("Bearer")]),t._v("，持续了较长时间，因此如果修改可能会对已有代码造成破坏，因此决定保持为 "),s("code",[t._v("Token")]),t._v(" 不变。")])]),t._v(" "),s("h2",{attrs:{id:"相关配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关配置"}},[t._v("#")]),t._v(" 相关配置")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("配置项名称")]),t._v(" "),s("th",[t._v("默认值")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("auth.access_token")])]),t._v(" "),s("td",[t._v("空")]),t._v(" "),s("td",[t._v("access token")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);