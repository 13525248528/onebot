(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{368:function(t,s,a){"use strict";a.r(s);var e=a(25),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[t._v("配置文件支持 INI 和 JSON 两种格式，并支持单个文件配置多个账号，或每个账号对应一个配置文件。")]),t._v(" "),a("p",[t._v("插件启动时（或重启时）按如下顺序依次尝试加载配置文件，一旦有一条加载成功，就停止加载（所有路径均为相对于 "),a("code",[t._v("data\\app\\io.github.richardchien.coolqhttpapi")]),t._v(" 的相对路径）：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("config.(cfg|ini)")]),t._v("（扩展名的括号和竖线表示优先加载 "),a("code",[t._v(".cfg")]),t._v("，若没有，则加载 "),a("code",[t._v(".ini")]),t._v("，下同），文件中通用配置需要放在 "),a("code",[t._v("[general]")]),t._v(" 下，QQ 号特定配置放在 "),a("code",[t._v("[<user_id>]")]),t._v(" 下")]),t._v(" "),a("li",[a("code",[t._v("config\\general.(cfg|ini)")]),t._v(" + "),a("code",[t._v("config\\<user_id>.(cfg|ini)")]),t._v("，前者是通用配置，全部放在 "),a("code",[t._v("[general]")]),t._v(" 下，后者是 QQ 号特定配置，全部放在 "),a("code",[t._v("[<user_id>]")]),t._v(" 下，后者覆盖前者中已存在的内容")]),t._v(" "),a("li",[a("code",[t._v("config.json")]),t._v("，通用配置需放在根对象的 "),a("code",[t._v("general")]),t._v(" 字段，QQ 号特定配置放在 QQ 号对应字段，例如 "),a("code",[t._v('{"general": {"host": "0.0.0.0"}, "123456": {"port": 6666}}')])]),t._v(" "),a("li",[a("code",[t._v("config\\general.json")]),t._v(" + "),a("code",[t._v("config\\<user_id>.json")]),t._v("，配置项均直接放在根对象，后者覆盖前者中已存在的内容")])]),t._v(" "),a("p",[a("strong",[t._v("重要：如果配置文件中需要使用中文或其它非 ASCII 字符，则必须使用 UTF-8 without BOM 编码保存文件！")])]),t._v(" "),a("h2",{attrs:{id:"几种典型的配置文件安排方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几种典型的配置文件安排方式"}},[t._v("#")]),t._v(" 几种典型的配置文件安排方式")]),t._v(" "),a("h3",{attrs:{id:"使用-ini-格式，在单个文件中存放多个账号的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-ini-格式，在单个文件中存放多个账号的配置"}},[t._v("#")]),t._v(" 使用 INI 格式，在单个文件中存放多个账号的配置")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("data\\app\\io.github.richardchien.coolqhttpapi\\config.ini")])])]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[general]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("host")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 0.0.0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("post_url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" http://192.168.0.11:8888")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[12345678]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("access_token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" Mgep4rV49rM8Jf")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 5700")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[87654321]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 5701")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用-json-格式，在单个文件中存放多个账号的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-json-格式，在单个文件中存放多个账号的配置"}},[t._v("#")]),t._v(" 使用 JSON 格式，在单个文件中存放多个账号的配置")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("data\\app\\io.github.richardchien.coolqhttpapi\\config.json")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"general"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"post_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8080"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"12345678"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"access_token"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mgep4rV49rM8Jf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5700")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"87654321"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5701")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用-json-格式，每个账号对应一个配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-json-格式，每个账号对应一个配置文件"}},[t._v("#")]),t._v(" 使用 JSON 格式，每个账号对应一个配置文件")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("data\\app\\io.github.richardchien.coolqhttpapi\\config\\general.json")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"post_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8080"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("data\\app\\io.github.richardchien.coolqhttpapi\\config\\12345678.json")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"access_token"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mgep4rV49rM8Jf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5700")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("data\\app\\io.github.richardchien.coolqhttpapi\\config\\87654321.json")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5701")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置项"}},[t._v("#")]),t._v(" 配置项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("配置项名称")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("host")])]),t._v(" "),a("td",[a("code",[t._v("0.0.0.0")])]),t._v(" "),a("td",[t._v("HTTP 服务器监听的 IP")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("port")])]),t._v(" "),a("td",[a("code",[t._v("5700")])]),t._v(" "),a("td",[t._v("HTTP 服务器监听的端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("use_http")])]),t._v(" "),a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("是否开启 HTTP 接口，即通过 HTTP 调用 API，见 "),a("a",{attrs:{href:"CommunicationMethods#%E6%8F%92%E4%BB%B6%E4%BD%9C%E4%B8%BA-http-%E6%9C%8D%E5%8A%A1%E7%AB%AF"}},[t._v("通信方式的第一种")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_host")])]),t._v(" "),a("td",[a("code",[t._v("0.0.0.0")])]),t._v(" "),a("td",[t._v("WebSocket 服务器监听的 IP")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_port")])]),t._v(" "),a("td",[a("code",[t._v("6700")])]),t._v(" "),a("td",[t._v("WebSocket 服务器监听的端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("use_ws")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否开启 WebSocket 服务器，可用于调用 API 和推送事件，见 "),a("a",{attrs:{href:"CommunicationMethods#%E6%8F%92%E4%BB%B6%E4%BD%9C%E4%B8%BA-websocket-%E6%9C%8D%E5%8A%A1%E7%AB%AF"}},[t._v("通信方式的第二种")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_reverse_url")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("反向 WebSocket Event 和事件上报的共用地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_reverse_api_url")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("反向 WebSocket API 地址，如果为空，则使用 "),a("code",[t._v("ws_reverse_url")]),t._v(" 指定的值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_reverse_event_url")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("反向 WebSocket 事件上报地址，如果为空，则使用 "),a("code",[t._v("ws_reverse_url")]),t._v(" 指定的值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_reverse_reconnect_interval")])]),t._v(" "),a("td",[a("code",[t._v("3000")])]),t._v(" "),a("td",[t._v("反向 WebSocket 客户端断线重连间隔，单位毫秒")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_reverse_reconnect_on_code_1000")])]),t._v(" "),a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("是否在关闭状态码为 1000 的时候重连")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ws_reverse_use_universal_client")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否使用 Universal 客户端（使用单个连接传输事件数据和 API 请求）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("use_ws_reverse")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否使用反向 WebSocket 服务，即插件作为 WebSocket 客户端主动连接指定的 API 和事件上报地址，见 "),a("a",{attrs:{href:"CommunicationMethods#%E6%8F%92%E4%BB%B6%E4%BD%9C%E4%B8%BA-websocket-%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%88%E5%8F%8D%E5%90%91-websocket%EF%BC%89"}},[t._v("通信方式的第三种")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("post_url")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("消息和事件的上报地址，通过 POST 方式请求，数据以 JSON 格式发送")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("post_timeout")])]),t._v(" "),a("td",[a("code",[t._v("0")])]),t._v(" "),a("td",[t._v("HTTP 上报（即访问 "),a("code",[t._v("post_url")]),t._v("）的超时时间，单位秒，0 表示不设置超时")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("access_token")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("API 访问 token，如果不为空，则会在接收到请求时验证 "),a("code",[t._v("Authorization")]),t._v(" 请求头是否为 "),a("code",[t._v("Bearer xxxxxxxx")]),t._v("，"),a("code",[t._v("xxxxxxxx")]),t._v(" 为 access token")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("secret")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("上报数据签名密钥，如果不为空，则会在 HTTP 上报时对 HTTP 正文进行 HMAC SHA1 哈希，使用 "),a("code",[t._v("secret")]),t._v(" 的值作为密钥，计算出的哈希值放在上报的 "),a("code",[t._v("X-Signature")]),t._v(" 请求头，例如 "),a("code",[t._v("X-Signature: sha1=f9ddd4863ace61e64f462d41ca311e3d2c1176e2")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("post_message_format")])]),t._v(" "),a("td",[a("code",[t._v("string")])]),t._v(" "),a("td",[t._v("上报消息格式，"),a("code",[t._v("string")]),t._v(" 为字符串格式，"),a("code",[t._v("array")]),t._v(" 为数组格式，具体见 "),a("a",{attrs:{href:"Message"}},[t._v("消息格式")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("serve_data_files")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否提供请求 "),a("code",[t._v("data")]),t._v(" 目录的文件的功能")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("enable_cors")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否允许跨域请求")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("update_source")])]),t._v(" "),a("td",[a("code",[t._v("global")])]),t._v(" "),a("td",[t._v("更新源")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("update_channel")])]),t._v(" "),a("td",[a("code",[t._v("stable")])]),t._v(" "),a("td",[t._v("更新通道，目前有 "),a("code",[t._v("stable")]),t._v("、"),a("code",[t._v("beta")]),t._v("、"),a("code",[t._v("alpha")]),t._v(" 三个")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("auto_check_update")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否自动检查更新（每次启用插件时检查），不启用的情况下，仍然可以在 CKYU 应用菜单中手动检查更新")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("auto_perform_update")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否自动执行更新，仅在 "),a("code",[t._v("auto_check_update")]),t._v(" 启用时有效，若启用，则插件将在自动检查到更新后，自动下载新版本（需要手动重启 CKYU 以生效）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("thread_pool_size")])]),t._v(" "),a("td",[a("code",[t._v("4")])]),t._v(" "),a("td",[t._v("工作线程池大小，用于异步 API 调用、反向 WebSocket API 调用和一些其它小的异步任务，应根据计算机性能和实际需求适当调节，若设为 0，则使用 "),a("code",[t._v("CPU 核心数 * 2 + 1")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("server_thread_pool_size")])]),t._v(" "),a("td",[a("code",[t._v("4")])]),t._v(" "),a("td",[t._v("API 服务器线程池大小，用于异步处理请求（HTTP 和 WebSocket），应根据计算机性能和实际需求适当调节，若设为 0，则使用 "),a("code",[t._v("CPU 核心数 * 2 + 1")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("convert_unicode_emoji")])]),t._v(" "),a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("是否在 CQ:emoji 和实际的 Unicode 之间进行转换，转换可能耗更多时间，但日常情况下影响不大，如果你的机器人需要处理非常大段的消息（上千字），且对性能有要求，可以考虑关闭转换")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("event_filter")])]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("指定事件过滤规则文件，见 "),a("a",{attrs:{href:"EventFilter"}},[t._v("事件过滤器")]),t._v("，留空将不开启事件过滤器")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("enable_backward_compatibility")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否启用旧版兼容性，启用时"),a("strong",[t._v("事件上报")]),t._v("的数据将和 3.x 版本保持兼容")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("show_log_console")])]),t._v(" "),a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("是否显示日志输出控制台")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("max_log_file_size")])]),t._v(" "),a("td",[a("code",[t._v("6291456")])]),t._v(" "),a("td",[t._v("最大单日志文件大小，单位字节，默认 6 MB")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("max_log_files")])]),t._v(" "),a("td",[a("code",[t._v("1")])]),t._v(" "),a("td",[t._v("最大日志文件备份数量（采用日志轮替机制）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("log_level")])]),t._v(" "),a("td",[a("code",[t._v("info")])]),t._v(" "),a("td",[t._v("日志文件和日志控制台的日志等级，可选 "),a("code",[t._v("debug")]),t._v("、"),a("code",[t._v("info")]),t._v("、"),a("code",[t._v("warning")]),t._v("、"),a("code",[t._v("error")]),t._v("、"),a("code",[t._v("fatal")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("use_extension")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否启用扩展机制，见 "),a("a",{attrs:{href:"Extension"}},[t._v("扩展")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("disable_coolq_log")])]),t._v(" "),a("td",[a("code",[t._v("true")])]),t._v(" "),a("td",[t._v("是否禁用 CKYU 原生日志，由于使用 CKYU 原生日志可能会导致快速重启时插件卡死，所以默认禁用，如果你不在乎重启时卡死，并且需要在 CKYU 原生日志窗口查看插件的日志，可以将此项设为 "),a("code",[t._v("false")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("online_status_detection_method")])]),t._v(" "),a("td",[a("code",[t._v("get_stranger_info")])]),t._v(" "),a("td",[t._v("QQ 在线状态检测方式，默认（"),a("code",[t._v("get_stranger_info")]),t._v("）通过陌生人查询接口判断，设为 "),a("code",[t._v("log_db")]),t._v(" 可切换成从 CKYU 的日志数据库判断，具体区别见 "),a("a",{attrs:{href:"API#get_status-%E8%8E%B7%E5%8F%96%E6%8F%92%E4%BB%B6%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%81"}},[t._v("其 API 说明")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("enable_heartbeat")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否启用心跳机制，启用时会产生类型为 "),a("code",[t._v("heartbeat")]),t._v(" 的元事件，见 "),a("a",{attrs:{href:"Post#%E5%85%83%E4%BA%8B%E4%BB%B6"}},[t._v("元事件")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("heartbeat_interval")])]),t._v(" "),a("td",[a("code",[t._v("15000")])]),t._v(" "),a("td",[t._v("产生心跳元事件的时间间隔，单位毫秒")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("enable_rate_limited_actions")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否启用限速 API 调用的支持")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("rate_limit_interval")])]),t._v(" "),a("td",[a("code",[t._v("500")])]),t._v(" "),a("td",[t._v("限速 API 调用的排队间隔时间，单位毫秒")])])])]),t._v(" "),a("h2",{attrs:{id:"几种常用的配置项组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几种常用的配置项组合"}},[t._v("#")]),t._v(" 几种常用的配置项组合")]),t._v(" "),a("p",[t._v("注意，将下面的 JSON 复制到插件配置文件时，请确保逗号正确，并且删掉注释。")]),t._v(" "),a("h3",{attrs:{id:"本地开发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地开发环境"}},[t._v("#")]),t._v(" 本地开发环境")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"log_level"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出调试级别日志")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"show_log_console"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示日志控制台")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果想要在CKYU的运行日志中查看插件日志，也可以加上下面这项")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"disable_coolq_log"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"自动更新插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动更新插件"}},[t._v("#")]),t._v(" 自动更新插件")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"update_source"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"update_channel"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"auto_check_update"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"auto_perform_update"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("现不再支持自动更新后自动重启 CKYU，需手动重载应用以生效。")]),t._v(" "),a("h3",{attrs:{id:"生产环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产环境"}},[t._v("#")]),t._v(" 生产环境")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭不用的功能，例如使用正向 WebSocket 时：")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"use_http"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"use_ws"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"use_ws_reverse"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"post_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 安全相关")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"access_token"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some-token"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"secret"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some-secret"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭自动更新（默认就是关闭的）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"auto_check_update"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"auto_perform_update"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据 CPU 核心数适当选择线程池大小")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"thread_pool_size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"server_thread_pool_size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如有需要，使用过滤器避免不必要的上报")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"event_filter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 日志相关")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"show_log_console"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 看需求，如果不需要通过 GUI 查看日志，这里推荐关闭")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"max_log_file_size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6291456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单日志文件最大字节数，6 MB")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"max_log_files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"log_level"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消息量特别大的情况下，可以酌情设置为 warning")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 心跳")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enable_heartbeat"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"heartbeat_interval"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15 秒一个心跳包")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求频率限制")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enable_rate_limited_actions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rate_limit_interval"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 300 毫秒一条消息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);