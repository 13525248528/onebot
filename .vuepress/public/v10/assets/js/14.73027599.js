(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{367:function(t,e,a){"use strict";a.r(e);var r=a(25),_=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),a("p",[t._v("CKYU 目前可以在 Wine 中运行，见 "),a("a",{attrs:{href:"https://cqp.cc/t/30966",target:"_blank",rel:"noopener noreferrer"}},[t._v("CKYU Air / Pro on Wine"),a("OutboundLink")],1),t._v("，因此也就自然而然有了相应的 Docker 镜像 "),a("a",{attrs:{href:"https://hub.docker.com/r/coolq/wine-coolq/",target:"_blank",rel:"noopener noreferrer"}},[t._v("coolq/wine-coolq"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("要在 Docker 中使用本插件，你可以使用 CKYU 官方的 Docker 镜像，然后在其中安装本插件（下载 cpk、编辑配置文件、启用插件），也可以使用我维护的已安装并启用了插件的镜像 "),a("a",{attrs:{href:"https://hub.docker.com/r/richardchien/cqhttp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("richardchien/cqhttp"),a("OutboundLink")],1),t._v("（基于 CKYU 官方的镜像修改）。下面介绍这个镜像的用法。")]),t._v(" "),a("h2",{attrs:{id:"基本用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ docker pull richardchien/cqhttp:latest\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" coolq  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于存储 CKYU 的程序文件")]),t._v("\n$ docker run -ti --rm --name cqhttp-test "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n             -v "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("/coolq:/home/user/coolq "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将宿主目录挂载到容器内用于持久化 CKYU 的程序文件")]),t._v("\n             -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v(":9000 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# noVNC 端口，用于从浏览器控制 CKYU")]),t._v("\n             -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5700")]),t._v(":5700 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CQHTTP 插件开放的端口")]),t._v("\n             -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("COOLQ_ACCOUNT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要登录的 QQ 账号，可选但建议填")]),t._v("\n             -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CQHTTP_POST_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://example.com:8080 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 事件上报地址")]),t._v("\n             -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CQHTTP_SERVE_DATA_FILES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许通过 HTTP 接口访问 CKYU 数据文件")]),t._v("\n             richardchien/cqhttp:latest\n")])])]),a("p",[t._v("其中，"),a("code",[t._v("CQHTTP_POST_URL")]),t._v("、"),a("code",[t._v("CQHTTP_SERVE_DATA_FILES")]),t._v(" 是用于配置插件运行的，格式为「"),a("code",[t._v("CQHTTP_")]),t._v(" + 插件配置项的大写」，具体的配置项，见 "),a("a",{attrs:{href:"Configuration"}},[t._v("配置")]),t._v("。")]),t._v(" "),a("p",[t._v("然后访问 "),a("code",[t._v("http://<你的IP>:9000/")]),t._v(" 进入 noVNC（默认密码 "),a("code",[t._v("MAX8char")]),t._v("），登录 CKYU，即可开始使用（插件已自动启用，配置文件也根据启动命令的环境变量自动生成了）。一般情况下，你不太需要关注插件是如何存在于容器中的。")]),t._v(" "),a("p",[t._v("注意，默认情况下，容器启动时会检查是否已经存在 "),a("code",[t._v("config")]),t._v(" 目录，如果不存在，则会将 "),a("code",[t._v("CQHTTP_")]),t._v(" 开头的环境变量写入到配置文件中；如果 "),a("code",[t._v("config")]),t._v(" 目录存在，即不是首次启动，则不会做任何修改。**因此，你可以在容器运行时手动修改配置文件，重启容器后仍然有效，这和旧版本的行为不一样！**如果你要让容器每次启动时都使用环境变量重新创建配置文件，以保持插件行为和容器启动命令的一致性，可以设置环境变量 "),a("code",[t._v("FORCE_ENV")]),t._v(" 的值为 "),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"通过环境变量配置容器的运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过环境变量配置容器的运行"}},[t._v("#")]),t._v(" 通过环境变量配置容器的运行")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("环境变量名")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("VNC_PASSWD")])]),t._v(" "),a("td",[t._v("继承自官方镜像，noVNC 的密码（官方说不能超过 8 个字符，实测可以超过，但只会验证前 8 位）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("COOLQ_ACCOUNT")])]),t._v(" "),a("td",[t._v("继承自官方镜像，设置要登录 CKYU 的 QQ 号。在第一次手动登录后，你可以勾选「快速登录」功能以启用自动登录，此后，容器启动或 CKYU 异常退出时，会自动登录该帐号。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("COOLQ_URL")])]),t._v(" "),a("td",[t._v("继承自官方镜像，设置 CKYU 的下载链接，默认为 "),a("code",[t._v("http://dlsec.cqp.me/cqa-tuling")]),t._v("，即 CKYU Air 图灵版。如需使用 CKYU Pro，可改为 "),a("code",[t._v("https://dlsec.cqp.me/cqp-tuling")]),t._v("。也可使用任何其它可下载的 URL，只要确保下载后的 zip 文件能解压出 "),a("code",[t._v("CKYU Air/CQA.exe")]),t._v(" 或 "),a("code",[t._v("CKYU Pro/CQP.exe")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("FORCE_ENV")])]),t._v(" "),a("td",[t._v("是否强制把 "),a("code",[t._v("CQHTTP_")]),t._v(" 开头的环境变量写入配置文件，"),a("strong",[t._v("这会删除现有的配置文件")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("CQHTTP_POST_URL")]),a("br"),a("code",[t._v("CQHTTP_SERVE_DATA_FILES")]),a("br"),a("code",[t._v("CQHTTP_USE_WS")]),a("br"),t._v("等形如 "),a("code",[t._v("CQHTTP_*")]),t._v(" 的")]),t._v(" "),a("td",[t._v("当容器首次启动或 "),a("code",[t._v("FORCE_ENV")]),t._v(" 为 "),a("code",[t._v("true")]),t._v(" 的情况下，容器会将这些项的值自动写入配置文件")])])])]),t._v(" "),a("h2",{attrs:{id:"更换／升级插件版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更换／升级插件版本"}},[t._v("#")]),t._v(" 更换／升级插件版本")]),t._v(" "),a("p",[t._v("Docker 镜像使用 tag 来标记版本，插件版本 3.0.0 之后的 richardchien/cqhttp 镜像遵循了这一点（旧版本没有，已移至镜像的 "),a("code",[t._v("legacy")]),t._v(" 标签）。")]),t._v(" "),a("p",[t._v("上一节的示例给出的命令拉取了 "),a("code",[t._v("richardchien/cqhttp:latest")]),t._v("，即当前最新版本（稳定版），如果你需要更新插件到最新版本，重新拉取一次 "),a("code",[t._v("latest")]),t._v(" 标签即可，如果你需要使用指定版本的插件，如 "),a("code",[t._v("3.0.0")]),t._v(" 版本，则使用镜像 "),a("code",[t._v("richardchien/cqhttp:3.0.0")]),t._v("。插件的 GitHub 仓库中的每个 release 对应 docker 镜像的一个 tag，"),a("strong",[t._v("注意，release 的标题中的版本号有 "),a("code",[t._v("v")]),t._v(" 开头，docker 镜像的 tag 没有")]),t._v("。")]),t._v(" "),a("p",[t._v("此外，Docker 容器在每次运行时，会将相应版本的 cpk 文件复制到 CKYU 的 app 目录，并覆盖已有的文件（假设有的话）。这意味着，"),a("strong",[t._v("当使用某个版本的 docker 镜像时，如果你自行更换了 cpk 文件，那么下次容器重启时将会重新覆盖它")]),t._v("。并且，无法使用插件的检查更新功能来更新。如果你不要这个行为，可以删除 "),a("code",[t._v("app\\io.github.richardchien.coolqhttpapi\\version.lock")]),t._v(" 文件以解除版本锁；如果要恢复默认行为，重新创建这个文件即可。")])])}),[],!1,null,null,null);e.default=_.exports}}]);